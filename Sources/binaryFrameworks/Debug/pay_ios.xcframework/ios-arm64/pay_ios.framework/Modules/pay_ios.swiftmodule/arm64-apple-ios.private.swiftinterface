// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name pay_ios
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Flutter
import PassKit
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_exported import pay_ios
extension PassKit.PKPaymentButtonType {
  public static func fromString(_ buttonType: Swift.String) -> PassKit.PKPaymentButtonType?
}
extension PassKit.PKPaymentButtonStyle {
  public static func fromString(_ buttonStyle: Swift.String) -> PassKit.PKPaymentButtonStyle?
}
extension PassKit.PKPayment {
  public func toDictionary() -> [Swift.String : Any]
}
extension PassKit.PKPaymentMethod {
  public func toDictionary() -> [Swift.String : Any]
}
extension PassKit.PKContact {
  public func toDictionary() -> [Swift.String : Any]
}
extension Foundation.PersonNameComponents {
  public func toDictionary() -> [Swift.String : Any]?
}
extension Contacts.CNPostalAddress {
  public func toDictionary() -> [Swift.String : Any]
}
extension PassKit.PKShippingMethod {
  public func toDictionary() -> [Swift.String : Any?]
}
extension PassKit.PKPaymentNetwork {
  public static func fromString(_ paymentNetworkString: Swift.String) -> PassKit.PKPaymentNetwork?
}
extension PassKit.PKPaymentSummaryItemType {
  public static func fromString(_ summaryItemType: Swift.String) -> PassKit.PKPaymentSummaryItemType
}
extension PassKit.PKMerchantCapability {
  public static func fromString(_ merchantCapability: Swift.String) -> PassKit.PKMerchantCapability?
}
extension PassKit.PKContactField {
  public static func fromString(_ contactFieldItem: Swift.String) -> PassKit.PKContactField?
}
@objc @_inheritsConvenienceInitializers public class PayPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin {
  @objc public static func register(with registrar: Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc override dynamic public init()
  @objc deinit
}
